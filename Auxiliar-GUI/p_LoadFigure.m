function st_Handles = p_LoadFigure()
% This function displays an animated gif during the data load. This process is
% based on the information provided by the Yair Altman webpage. 
% Staed by Altmans: 'As with other internal Matlab components, ...
% this feature has a “High risk of breaking in a future release“, therefore, 
% it might be removed as early as the next upcoming release, without prior warning


st_Handles.s_hFig = figure(...                         
                'MenuBar','None', ...
                'ToolBar','None', ...
                'Color','w',...
                'NumberTitle','off', ...
                'Name','Loading data', ...
                'BusyAction', 'queue', ...
                'WindowStyle', 'normal', ...
                'Units','normalized',...
                'Interruptible', 'off', ...
                'DockControls', 'off', ...
                'WindowStyle','modal',...
                'Position',[.42 .45 .16 .13]);
    
set(st_Handles.s_hFig,'Units','pixels')
v_PointPos   = get(st_Handles.s_hFig,'Position'); 

st_Handles.s_hText  = uicontrol(st_Handles.s_hFig,...
                    'Style','text',...
                    'String',' Please wait while the data is being loaded. It will take just a moment!',...
                    'BackgroundColor','w',...
                    'Units','pixels',...
                    'Position',[10 75 v_PointPos(3)-20 v_PointPos(4)-75-10]);
    
st_Path	= which('000loadatarayripple.gif');    
st_je   = javax.swing.JEditorPane('text/html',...
        sprintf('<html><img src="file:/%s"/></html>',st_Path));
 
[s_hj, s_hc] =  javacomponent(st_je,[],st_Handles.s_hFig);
set(s_hc, 'pos', [v_PointPos(3)/2-35,5,70,70])

% try
%     % R2010a and newer
%     iconsClassName = 'com.mathworks.widgets.BusyAffordance$AffordanceSize';
%     iconsSizeEnums = javaMethod('values',iconsClassName);
%     SIZE_32x32 = iconsSizeEnums(2);  % (1) = 16x16,  (2) = 32x32
%     jObj = com.mathworks.widgets.BusyAffordance(SIZE_32x32, 'Processing...');  % icon, label
% catch
%     % R2009b and earlier
%     redColor   = java.awt.Color(1,0,0);
%     blackColor = java.awt.Color(0,0,0);
%     jObj = com.mathworks.widgets.BusyAffordance(redColor, blackColor);
% end
% jObj.setPaintsWhenStopped(true);  % default = false
% jObj.useWhiteDots(false);         % default = false (true is good for dark backgrounds)
% javacomponent(jObj.getComponent, [10,10,80,80], s_hFig);
% jObj.start;
%     for k=1:100
%         pause(0.001)
%     end
% jObj.stop;
% jObj.setBusyText('All done!');


